version: "3.8"

networks:
  dask-net:
    name: dask
    driver: bridge

services:
  scheduler:
    image: ghcr.io/dask/dask:latest
    hostname: scheduler
    ports:
      - "8786:8786"  # Scheduler port
      - "8787:8787"  # Dashboard
    command: ["dask-scheduler"]
    networks:
      - dask-net
    
  worker:
    image: ghcr.io/dask/dask:latest
    command: ["dask-worker", "tcp://scheduler:8786"]
    networks:
      - dask-net
    depends_on:
      - scheduler
  
  notebook:
    image: ghcr.io/dask/dask-notebook:latest
    ports:
      - "8888:8888"
    environment:
      - DASK_SCHEDULER_ADDRESS=tcp://scheduler:8786
    networks:
      - dask-net
    depends_on:
      - scheduler

  minio:
    image: minio/minio
    expose:
      - "9000"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minio_user"
      MINIO_ROOT_PASSWORD: "minio_password"
    networks:
      - dask-net
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 1s
      timeout: 10s
      retries: 5
    command: server /data --console-address ":9001"

  minio-create-bucket:
    image: minio/mc
    networks:
      - dask-net
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      if ! mc ls minio | grep --quiet bucket; then
        mc mb minio/bucket
      else
        echo 'bucket already exists'
      fi
      "
